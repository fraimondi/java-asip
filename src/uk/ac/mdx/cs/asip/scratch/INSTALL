You will need to configure the Raspberry Pi as an access point (point 1);
Then, clone java-asip and launch the service on the Pi (point 2)
Finally, export the java-asip project as a jar and launch the bridge (point 3)

**************************
1) Set up the Raspberry Pi 3 as an access point:

# apt-get update
# apt-get upgrade

# apt-get install dnsmasq hostapd

# sudo systemctl stop dnsmasq
# sudo systemctl stop hostapd

Edit /etc/dhcpcd.conf and add at the end:
interface wlan0
    static ip_address=192.168.42.1/24

# service dhcpcd restart

Replace /etc/dnsmasq.conf with the following content only:
interface=wlan0      
  dhcp-range=192.168.42.100,192.168.42.200,255.255.255.0,24h

Create /etc/hostapd/hostapd.conf with the following content:
interface=wlan0
driver=nl80211
ssid=NewMirtoBot14
hw_mode=g
channel=7
wmm_enabled=0
macaddr_acl=0
auth_algs=1
ignore_broadcast_ssid=0
wpa=2
wpa_passphrase=Concorde
wpa_key_mgmt=WPA-PSK
wpa_pairwise=TKIP
rsn_pairwise=CCMP

Edit /etc/default/hostapd and change the line to point to the config file:
DAEMON_CONF="/etc/hostapd/hostapd.conf"

Restart everything with:
sudo systemctl start hostapd
sudo systemctl start dnsmasq

Reboot and make sure everything works

**************

2) Clone java-asip and start the TCP to serial bridge:

$ git clone https://github.com/fraimondi/java-asip
$ cd src
$ javac -classpath ../lib/jssc-2.8.0.jar    uk/ac/mdx/cs/asip/tcpclient/SimpleAsipTCPSerialBridge.java
$ java -classpath ../lib/jssc-2.8.0.jar:./ uk.ac.mdx.cs.asip.tcpclient.SimpleAsipTCPSerialBridge /dev/ttyS0


***************

3) Open java-asip in Eclipse and export it as a jar file (runnable jar file) with launch configuration 
HTTPScratchToMirtoBridge (or simply grab the relevant class files).
Launch the bridge with:
$ java -jar scratch-mirto-bridge.jar 192.168.42.1
Finally, download Scratch 2 (off-line version). Import an experimental
extension by pressing SHIFT and then click on the File menu.
Select MirtoScratch.json for the new blocks
